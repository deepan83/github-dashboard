{"version":3,"sources":["github-dashboard/tests/adapters/application.jshint.js","github-dashboard/tests/app.jshint.js","github-dashboard/tests/authenticators/torii.jshint.js","github-dashboard/tests/components/application-header.jshint.js","github-dashboard/tests/controllers/login.jshint.js","github-dashboard/tests/graphql-adapter/compiler.jshint.js","github-dashboard/tests/graphql-adapter/generator.jshint.js","github-dashboard/tests/graphql-adapter/parser.jshint.js","github-dashboard/tests/graphql-adapter/types/field.jshint.js","github-dashboard/tests/helpers/destroy-app.js","github-dashboard/tests/helpers/destroy-app.jshint.js","github-dashboard/tests/helpers/ember-simple-auth.js","github-dashboard/tests/helpers/module-for-acceptance.js","github-dashboard/tests/helpers/module-for-acceptance.jshint.js","github-dashboard/tests/helpers/resolver.js","github-dashboard/tests/helpers/resolver.jshint.js","github-dashboard/tests/helpers/start-app.js","github-dashboard/tests/helpers/start-app.jshint.js","github-dashboard/tests/helpers/torii.js","github-dashboard/tests/models/organization.jshint.js","github-dashboard/tests/models/pull-request.jshint.js","github-dashboard/tests/models/repository.jshint.js","github-dashboard/tests/models/viewer.jshint.js","github-dashboard/tests/resolver.jshint.js","github-dashboard/tests/router.jshint.js","github-dashboard/tests/routes/fascia.jshint.js","github-dashboard/tests/routes/index.jshint.js","github-dashboard/tests/routes/login.jshint.js","github-dashboard/tests/routes/pull-requests.jshint.js","github-dashboard/tests/routes/releases.jshint.js","github-dashboard/tests/serializers/application.jshint.js","github-dashboard/tests/services/ajax.jshint.js","github-dashboard/tests/test-helper.js","github-dashboard/tests/test-helper.jshint.js","github-dashboard/tests/torii-providers/github-oauth2.jshint.js","github-dashboard/tests/torii/providers/github-oauth2.jshint.js","github-dashboard/tests/unit/routes/pull-requests-test.js","github-dashboard/tests/unit/routes/pull-requests-test.jshint.js","github-dashboard/tests/unit/routes/releases-test.js","github-dashboard/tests/unit/routes/releases-test.jshint.js","vendor/ember-cli/tests-suffix.js"],"sourcesContent":["define('github-dashboard/tests/adapters/application.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - adapters/application.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'adapters/application.js should pass jshint.\\nadapters/application.js: line 5, col 12, \\'Ember\\' is not defined.\\nadapters/application.js: line 8, col 12, \\'Ember\\' is not defined.\\nadapters/application.js: line 7, col 16, \\'EmberENV\\' is not defined.\\n\\n3 errors');\n  });\n});","define('github-dashboard/tests/app.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - app.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'app.js should pass jshint.');\n  });\n});","define('github-dashboard/tests/authenticators/torii.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - authenticators/torii.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'authenticators/torii.js should pass jshint.');\n  });\n});","define('github-dashboard/tests/components/application-header.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - components/application-header.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/application-header.js should pass jshint.');\n  });\n});","define('github-dashboard/tests/controllers/login.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - controllers/login.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'controllers/login.js should pass jshint.');\n  });\n});","define('github-dashboard/tests/graphql-adapter/compiler.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - graphql-adapter/compiler.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'graphql-adapter/compiler.js should pass jshint.');\n  });\n});","define('github-dashboard/tests/graphql-adapter/generator.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - graphql-adapter/generator.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'graphql-adapter/generator.js should pass jshint.');\n  });\n});","define('github-dashboard/tests/graphql-adapter/parser.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - graphql-adapter/parser.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'graphql-adapter/parser.js should pass jshint.');\n  });\n});","define('github-dashboard/tests/graphql-adapter/types/field.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - graphql-adapter/types/field.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'graphql-adapter/types/field.js should pass jshint.');\n  });\n});","define('github-dashboard/tests/helpers/destroy-app', ['exports', 'ember'], function (exports, _ember) {\n  exports['default'] = destroyApp;\n\n  function destroyApp(application) {\n    _ember['default'].run(application, 'destroy');\n  }\n});","define('github-dashboard/tests/helpers/destroy-app.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - helpers/destroy-app.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/destroy-app.js should pass jshint.');\n  });\n});","define('github-dashboard/tests/helpers/ember-simple-auth', ['exports', 'ember-simple-auth/authenticators/test'], function (exports, _emberSimpleAuthAuthenticatorsTest) {\n  exports.authenticateSession = authenticateSession;\n  exports.currentSession = currentSession;\n  exports.invalidateSession = invalidateSession;\n\n  var TEST_CONTAINER_KEY = 'authenticator:test';\n\n  function ensureAuthenticator(app, container) {\n    var authenticator = container.lookup(TEST_CONTAINER_KEY);\n    if (!authenticator) {\n      app.register(TEST_CONTAINER_KEY, _emberSimpleAuthAuthenticatorsTest['default']);\n    }\n  }\n\n  function authenticateSession(app, sessionData) {\n    var container = app.__container__;\n\n    var session = container.lookup('service:session');\n    ensureAuthenticator(app, container);\n    session.authenticate(TEST_CONTAINER_KEY, sessionData);\n    return wait();\n  }\n\n  ;\n\n  function currentSession(app) {\n    return app.__container__.lookup('service:session');\n  }\n\n  ;\n\n  function invalidateSession(app) {\n    var session = app.__container__.lookup('service:session');\n    if (session.get('isAuthenticated')) {\n      session.invalidate();\n    }\n    return wait();\n  }\n\n  ;\n});","define('github-dashboard/tests/helpers/module-for-acceptance', ['exports', 'qunit', 'github-dashboard/tests/helpers/start-app', 'github-dashboard/tests/helpers/destroy-app'], function (exports, _qunit, _githubDashboardTestsHelpersStartApp, _githubDashboardTestsHelpersDestroyApp) {\n  exports['default'] = function (name) {\n    var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\n    (0, _qunit.module)(name, {\n      beforeEach: function beforeEach() {\n        this.application = (0, _githubDashboardTestsHelpersStartApp['default'])();\n\n        if (options.beforeEach) {\n          options.beforeEach.apply(this, arguments);\n        }\n      },\n\n      afterEach: function afterEach() {\n        (0, _githubDashboardTestsHelpersDestroyApp['default'])(this.application);\n\n        if (options.afterEach) {\n          options.afterEach.apply(this, arguments);\n        }\n      }\n    });\n  };\n});","define('github-dashboard/tests/helpers/module-for-acceptance.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - helpers/module-for-acceptance.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/module-for-acceptance.js should pass jshint.');\n  });\n});","define('github-dashboard/tests/helpers/resolver', ['exports', 'github-dashboard/resolver', 'github-dashboard/config/environment'], function (exports, _githubDashboardResolver, _githubDashboardConfigEnvironment) {\n\n  var resolver = _githubDashboardResolver['default'].create();\n\n  resolver.namespace = {\n    modulePrefix: _githubDashboardConfigEnvironment['default'].modulePrefix,\n    podModulePrefix: _githubDashboardConfigEnvironment['default'].podModulePrefix\n  };\n\n  exports['default'] = resolver;\n});","define('github-dashboard/tests/helpers/resolver.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - helpers/resolver.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/resolver.js should pass jshint.');\n  });\n});","define('github-dashboard/tests/helpers/start-app', ['exports', 'ember', 'github-dashboard/app', 'github-dashboard/config/environment'], function (exports, _ember, _githubDashboardApp, _githubDashboardConfigEnvironment) {\n  exports['default'] = startApp;\n\n  function startApp(attrs) {\n    var application = undefined;\n\n    var attributes = _ember['default'].merge({}, _githubDashboardConfigEnvironment['default'].APP);\n    attributes = _ember['default'].merge(attributes, attrs); // use defaults, but you can override;\n\n    _ember['default'].run(function () {\n      application = _githubDashboardApp['default'].create(attributes);\n      application.setupForTesting();\n      application.injectTestHelpers();\n    });\n\n    return application;\n  }\n});","define('github-dashboard/tests/helpers/start-app.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - helpers/start-app.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/start-app.js should pass jshint.');\n  });\n});","define('github-dashboard/tests/helpers/torii', ['exports'], function (exports) {\n  exports.stubValidSession = stubValidSession;\n\n  function stubValidSession(application, sessionData) {\n    var session = application.__container__.lookup('service:session');\n    var sm = session.get('stateMachine');\n    Ember.run(function () {\n      sm.send('startOpen');\n      sm.send('finishOpen', sessionData);\n    });\n  }\n});","define('github-dashboard/tests/models/organization.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - models/organization.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'models/organization.js should pass jshint.');\n  });\n});","define('github-dashboard/tests/models/pull-request.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - models/pull-request.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'models/pull-request.js should pass jshint.');\n  });\n});","define('github-dashboard/tests/models/repository.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - models/repository.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'models/repository.js should pass jshint.');\n  });\n});","define('github-dashboard/tests/models/viewer.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - models/viewer.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'models/viewer.js should pass jshint.');\n  });\n});","define('github-dashboard/tests/resolver.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - resolver.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'resolver.js should pass jshint.');\n  });\n});","define('github-dashboard/tests/router.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - router.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'router.js should pass jshint.');\n  });\n});","define('github-dashboard/tests/routes/fascia.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - routes/fascia.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/fascia.js should pass jshint.');\n  });\n});","define('github-dashboard/tests/routes/index.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - routes/index.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/index.js should pass jshint.');\n  });\n});","define('github-dashboard/tests/routes/login.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - routes/login.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/login.js should pass jshint.');\n  });\n});","define('github-dashboard/tests/routes/pull-requests.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - routes/pull-requests.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/pull-requests.js should pass jshint.');\n  });\n});","define('github-dashboard/tests/routes/releases.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - routes/releases.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/releases.js should pass jshint.');\n  });\n});","define('github-dashboard/tests/serializers/application.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - serializers/application.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'serializers/application.js should pass jshint.\\nserializers/application.js: line 5, col 5, Forgotten \\'debugger\\' statement?\\nserializers/application.js: line 4, col 23, \\'options\\' is defined but never used.\\nserializers/application.js: line 4, col 13, \\'snapshot\\' is defined but never used.\\nserializers/application.js: line 9, col 5, Forgotten \\'debugger\\' statement?\\n\\n4 errors');\n  });\n});","define('github-dashboard/tests/services/ajax.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - services/ajax.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'services/ajax.js should pass jshint.');\n  });\n});","define('github-dashboard/tests/test-helper', ['exports', 'github-dashboard/tests/helpers/resolver', 'github-dashboard/tests/helpers/flash-message', 'ember-qunit'], function (exports, _githubDashboardTestsHelpersResolver, _githubDashboardTestsHelpersFlashMessage, _emberQunit) {\n\n  (0, _emberQunit.setResolver)(_githubDashboardTestsHelpersResolver['default']);\n});","define('github-dashboard/tests/test-helper.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - test-helper.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'test-helper.js should pass jshint.');\n  });\n});","define('github-dashboard/tests/torii-providers/github-oauth2.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - torii-providers/github-oauth2.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'torii-providers/github-oauth2.js should pass jshint.\\ntorii-providers/github-oauth2.js: line 15, col 7, Forgotten \\'debugger\\' statement?\\n\\n1 error');\n  });\n});","define('github-dashboard/tests/torii/providers/github-oauth2.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - torii/providers/github-oauth2.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'torii/providers/github-oauth2.js should pass jshint.\\ntorii/providers/github-oauth2.js: line 15, col 7, Forgotten \\'debugger\\' statement?\\ntorii/providers/github-oauth2.js: line 10, col 8, \\'params\\' is defined but never used.\\n\\n2 errors');\n  });\n});","define('github-dashboard/tests/unit/routes/pull-requests-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('route:pull-requests', 'Unit | Route | pull requests', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n});","define('github-dashboard/tests/unit/routes/pull-requests-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - unit/routes/pull-requests-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/pull-requests-test.js should pass jshint.');\n  });\n});","define('github-dashboard/tests/unit/routes/releases-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('route:releases', 'Unit | Route | releases', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n});","define('github-dashboard/tests/unit/routes/releases-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - unit/routes/releases-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/releases-test.js should pass jshint.');\n  });\n});","/* jshint ignore:start */\n\nrequire('github-dashboard/tests/test-helper');\nEmberENV.TESTS_FILE_LOADED = true;\n\n/* jshint ignore:end */\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;","file":"tests.js"}