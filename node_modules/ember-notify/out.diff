diff --git a/.editorconfig b/.editorconfig
index 47c5438..219985c 100644
--- a/.editorconfig
+++ b/.editorconfig
@@ -13,22 +13,8 @@ insert_final_newline = true
 indent_style = space
 indent_size = 2
 
-[*.js]
-indent_style = space
-indent_size = 2
-
 [*.hbs]
 insert_final_newline = false
-indent_style = space
-indent_size = 2
-
-[*.css]
-indent_style = space
-indent_size = 2
-
-[*.html]
-indent_style = space
-indent_size = 2
 
 [*.{diff,md}]
 trim_trailing_whitespace = false
diff --git a/.eslintrc.js b/.eslintrc.js
new file mode 100644
index 0000000..2978e35
--- /dev/null
+++ b/.eslintrc.js
@@ -0,0 +1,13 @@
+module.exports = {
+  root: true,
+  parserOptions: {
+    ecmaVersion: 6,
+    sourceType: 'module'
+  },
+  extends: 'eslint:recommended',
+  env: {
+    'browser': true
+  },
+  rules: {
+  }
+};
diff --git a/.jshintrc b/.jshintrc
deleted file mode 100644
index fa3b4b3..0000000
--- a/.jshintrc
+++ /dev/null
@@ -1,32 +0,0 @@
-{
-  "predef": [
-    "document",
-    "window",
-    "-Promise"
-  ],
-  "browser": true,
-  "boss": true,
-  "curly": false,
-  "debug": false,
-  "devel": true,
-  "eqeqeq": true,
-  "evil": true,
-  "forin": false,
-  "immed": false,
-  "laxbreak": true,
-  "newcap": true,
-  "noarg": true,
-  "noempty": false,
-  "nonew": false,
-  "nomen": false,
-  "onevar": false,
-  "plusplus": false,
-  "regexp": false,
-  "undef": true,
-  "sub": true,
-  "strict": false,
-  "white": false,
-  "eqnull": true,
-  "esnext": true,
-  "unused": true
-}
diff --git a/.npmignore b/.npmignore
index d522ca2..fa8b147 100644
--- a/.npmignore
+++ b/.npmignore
@@ -1,15 +1,16 @@
-bower_components/
-tests/
-tmp/
-dist/
-
+/bower_components
+/config/ember-try.js
+/dist
+/tests
+/tmp
+**/.gitkeep
 .bowerrc
 .editorconfig
 .ember-cli
+.gitignore
+.jshintrc
+.watchmanconfig
 .travis.yml
-.npmignore
-**/.gitkeep
 bower.json
 ember-cli-build.js
-Brocfile.js
-testem.json
+testem.js
diff --git a/.travis.yml b/.travis.yml
index 957dc14..794f9c6 100644
--- a/.travis.yml
+++ b/.travis.yml
@@ -1,13 +1,17 @@
 ---
 language: node_js
 node_js:
-  - "5.10"
+  - "4"
+
+sudo: false
 
 cache:
   directories:
     - node_modules
 
 env:
+  - EMBER_TRY_SCENARIO=default
+  - EMBER_TRY_SCENARIO=ember-1.13
   - EMBER_TRY_SCENARIO=ember-release
   - EMBER_TRY_SCENARIO=ember-beta
   - EMBER_TRY_SCENARIO=ember-canary
@@ -17,10 +21,18 @@ matrix:
   allow_failures:
     - env: EMBER_TRY_SCENARIO=ember-canary
 
-install:
+before_install:
+  - npm config set spin false
   - npm install -g bower
-  - bower install
+  - bower --version
+  - npm install phantomjs-prebuilt
+  - node_modules/phantomjs-prebuilt/bin/phantomjs --version
+
+install:
   - npm install
+  - bower install
 
 script:
-  - ember try $EMBER_TRY_SCENARIO test --skip-cleanup
+  # Usually, it's ok to finish the test scenario without reverting
+  #  to the addon's original dependency state, skipping "cleanup".
+  - ember try:one $EMBER_TRY_SCENARIO test --skip-cleanup
diff --git a/.watchmanconfig b/.watchmanconfig
index 5e9462c..e7834e3 100644
--- a/.watchmanconfig
+++ b/.watchmanconfig
@@ -1,3 +1,3 @@
 {
-  "ignore_dirs": ["tmp"]
+  "ignore_dirs": ["tmp", "dist"]
 }
diff --git a/LICENSE.md b/LICENSE.md
index 00e9fbb..02000b5 100644
--- a/LICENSE.md
+++ b/LICENSE.md
@@ -1,6 +1,6 @@
 The MIT License (MIT)
 
-Copyright (c) 2015
+Copyright (c) 2016
 
 Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
 
diff --git a/addon/components/ember-notify/message.js b/addon/components/ember-notify/message.js
index a52f15c..9b3d411 100644
--- a/addon/components/ember-notify/message.js
+++ b/addon/components/ember-notify/message.js
@@ -4,7 +4,7 @@ import Notify from 'ember-notify';
 
 export default Ember.Component.extend({
   layout: layout,
-  message: null,
+  message: {},
   closeAfter: null,
 
   classNameBindings: [
diff --git a/bower.json b/bower.json
index e9a9f54..bd9165c 100644
--- a/bower.json
+++ b/bower.json
@@ -1,16 +1,11 @@
 {
   "name": "ember-notify",
   "dependencies": {
-    "ember": "components/ember#release",
-    "ember-cli-shims": "ember-cli/ember-cli-shims#0.0.3",
-    "ember-cli-test-loader": "ember-cli-test-loader#0.1.3",
-    "ember-mocha": "~0.8.0",
-    "ember-load-initializers": "ember-cli/ember-load-initializers#0.1.5",
-    "ember-resolver": "~0.1.18",
-    "jquery": "^1.11.1",
-    "loader.js": "ember-cli/loader.js#3.2.0"
-  },
-  "resolutions": {
-    "ember": "release"
+    "ember": "~2.8.0",
+    "ember-cli-shims": "0.1.1",
+    "mocha": "~2.2.4",
+    "chai": "~2.3.0",
+    "ember-mocha-adapter": "~0.3.1",
+    "ember-cli-test-loader": "0.2.2"
   }
 }
diff --git a/config/ember-try.js b/config/ember-try.js
index 92ae567..014f603 100644
--- a/config/ember-try.js
+++ b/config/ember-try.js
@@ -1,31 +1,54 @@
-/* jshint node:true */
+/*jshint node:true*/
 module.exports = {
   scenarios: [
     {
+      name: 'default',
+      bower: {
+        dependencies: { }
+      }
+    },
+    {
+      name: 'ember-1.13',
+      bower: {
+        dependencies: {
+          'ember': '~1.13.0'
+        },
+        resolutions: {
+          'ember': '~1.13.0'
+        }
+      }
+    },
+    {
       name: 'ember-release',
-      dependencies: {
-        'ember': 'components/ember#release'
-      },
-      resolutions: {
-        'ember': 'release'
+      bower: {
+        dependencies: {
+          'ember': 'components/ember#release'
+        },
+        resolutions: {
+          'ember': 'release'
+        }
       }
     },
     {
       name: 'ember-beta',
-      dependencies: {
-        'ember': 'components/ember#beta'
-      },
-      resolutions: {
-        'ember': 'beta'
+      bower: {
+        dependencies: {
+          'ember': 'components/ember#beta'
+        },
+        resolutions: {
+          'ember': 'beta'
+        }
       }
     },
     {
       name: 'ember-canary',
-      dependencies: {
-        'ember': 'components/ember#canary'
-      },
-      resolutions: {
-        'ember': 'canary'
+      bower: {
+        dependencies: {
+          'ember': 'components/ember#canary'
+        },
+        resolutions: {
+          'ember': 'canary'
+        }
       }
     }
   ]
diff --git a/config/environment.js b/config/environment.js
index 2dd57ee..28a787b 100644
--- a/config/environment.js
+++ b/config/environment.js
@@ -1,10 +1,6 @@
-/* jshint node:true */
+/*jshint node:true*/
+'use strict';
 
-module.exports = function(environment) {
-  return {
-    'ember-devtools': {
-      global: true,
-      enabled: environment === 'development'
-    }
-  };
+module.exports = function(/* environment, appConfig */) {
+  return { };
 };
diff --git a/ember-cli-build.js b/ember-cli-build.js
index d24c444..4ac3913 100644
--- a/ember-cli-build.js
+++ b/ember-cli-build.js
@@ -1,7 +1,18 @@
-/* jshint node: true */
+/*jshint node:true*/
+/* global require, module */
 var EmberAddon = require('ember-cli/lib/broccoli/ember-addon');
 
 module.exports = function(defaults) {
-  var app = new EmberAddon(defaults, {});
+  var app = new EmberAddon(defaults, {
+    // Add options here
+  });
+
+  /*
+    This build file specifies the options for the dummy test app of this
+    addon, located in `/tests/dummy`
+    This build file does *not* influence how the addon or the app using it
+    behave. You most likely want to be modifying `./index.js` or app's build file
+  */
+
   return app.toTree();
 };
diff --git a/index.js b/index.js
index 472cd84..988ac71 100644
--- a/index.js
+++ b/index.js
@@ -1,16 +1,6 @@
 /* jshint node: true */
 'use strict';
-var objectAssign = require('object-assign');
 
 module.exports = {
-  name: 'ember-notify',
-  included: function(app) {
-    this._super.included.apply(this, arguments);
-    var options = objectAssign({
-      importCss: true
-    }, app.options.emberNotify);
-    if (options.importCss) {
-      app.import('vendor/ember-notify.css');
-    }
-  }
+  name: 'ember-notify'
 };
diff --git a/package.json b/package.json
index 1a66919..f542681 100644
--- a/package.json
+++ b/package.json
@@ -1,49 +1,51 @@
 {
   "name": "ember-notify",
-  "version": "5.1.1",
-  "description": "Displays wee little notification messages down the bottom of your Ember.js app.",
+  "version": "5.1.2",
+  "description": "The default blueprint for ember-cli addons.",
   "directories": {
     "doc": "doc",
     "test": "tests"
   },
   "scripts": {
-    "start": "ember server",
     "build": "ember build",
-    "test": "ember try:testall"
+    "start": "ember server",
+    "test": "ember try:each"
   },
-  "repository": "https://github.com/aexmachina/ember-notify.git",
-  "author": "@aexmachina",
+  "repository": "",
   "engines": {
     "node": ">= 0.10.0"
   },
+  "author": "",
   "license": "MIT",
   "devDependencies": {
-    "broccoli-asset-rev": "^2.0.2",
-    "ember-cli": "1.13.6",
-    "ember-cli-app-version": "0.4.0",
-    "ember-cli-dependency-checker": "^1.0.0",
-    "ember-cli-htmlbars-inline-precompile": "^0.1.1",
-    "ember-cli-ic-ajax": "0.2.1",
-    "ember-cli-inject-live-reload": "^1.3.0",
-    "ember-cli-mocha": "0.9.1",
-    "ember-cli-release": "0.2.3",
-    "ember-cli-uglify": "^1.0.1",
-    "ember-devtools": "^4.4.0",
-    "ember-disable-prototype-extensions": "^1.0.0",
-    "ember-disable-proxy-controllers": "^1.0.0",
-    "ember-export-application-global": "^1.0.2",
-    "ember-try": "0.0.6"
+    "broccoli-asset-rev": "^2.4.2",
+    "ember-ajax": "^2.0.1",
+    "ember-cli": "2.8.0",
+    "ember-cli-app-version": "^1.0.0",
+    "ember-cli-dependency-checker": "^1.2.0",
+    "ember-cli-eslint": "3.0.0",
+    "ember-cli-htmlbars-inline-precompile": "^0.3.1",
+    "ember-cli-inject-live-reload": "^1.4.0",
+    "ember-cli-mocha": "0.10.4",
+    "ember-cli-release": "^0.2.9",
+    "ember-cli-sri": "^2.1.0",
+    "ember-cli-test-loader": "^1.1.0",
+    "ember-cli-uglify": "^1.2.0",
+    "ember-data": "^2.8.0",
+    "ember-disable-prototype-extensions": "^1.1.0",
+    "ember-export-application-global": "^1.0.5",
+    "ember-load-initializers": "^0.5.1",
+    "ember-resolver": "^2.0.3",
+    "loader.js": "^4.0.1"
   },
   "keywords": [
     "ember-addon"
   ],
   "dependencies": {
-    "object-assign": "^2.0.0",
-    "ember-cli-babel": "^5.0.0",
+    "ember-cli-babel": "^5.1.6",
     "ember-cli-htmlbars": "^1.0.3"
   },
   "ember-addon": {
-    "configPath": "tests/dummy/config",
-    "demoURL": "http://simonwade.me/assets/ember-demos/#/ember-notify"
+    "configPath": "tests/dummy/config"
   }
 }
diff --git a/testem.json b/testem.js
similarity index 71%
rename from testem.json
rename to testem.js
index 0f35392..6267dc3 100644
--- a/testem.json
+++ b/testem.js
@@ -1,5 +1,6 @@
-{
-  "framework": "qunit",
+/*jshint node:true*/
+module.exports = {
+  "framework": "mocha",
   "test_page": "tests/index.html?hidepassed",
   "disable_watching": true,
   "launch_in_ci": [
@@ -9,4 +10,4 @@
     "PhantomJS",
     "Chrome"
   ]
-}
+};
diff --git a/tests/.eslintrc.js b/tests/.eslintrc.js
new file mode 100644
index 0000000..751aa72
--- /dev/null
+++ b/tests/.eslintrc.js
@@ -0,0 +1,16 @@
+module.exports = {
+  env: {
+    'embertest': true
+  },
+  globals: {
+    "describe": true,
+    "it": true,
+    "expect": true,
+    "assert": true,
+    "before": true,
+    "beforeEach": true,
+    "after": true,
+    "afterEach": true,
+    "$": true
+  }
+};
diff --git a/tests/.jshintrc b/tests/.jshintrc
deleted file mode 100644
index 10c4c75..0000000
--- a/tests/.jshintrc
+++ /dev/null
@@ -1,60 +0,0 @@
-{
-  "predef": [
-    "mocha",
-    "chai",
-    "expect",
-    "describe",
-    "it",
-    "before",
-    "beforeEach",
-    "after",
-    "afterEach",
-    "document",
-    "window",
-    "location",
-    "setTimeout",
-    "$",
-    "-Promise",
-    "define",
-    "console",
-    "visit",
-    "exists",
-    "fillIn",
-    "click",
-    "keyEvent",
-    "triggerEvent",
-    "find",
-    "findWithAssert",
-    "wait",
-    "DS",
-    "andThen",
-    "currentURL",
-    "currentPath",
-    "currentRouteName"
-  ],
-  "node": false,
-  "browser": true,
-  "boss": true,
-  "curly": false,
-  "debug": false,
-  "devel": false,
-  "eqeqeq": true,
-  "evil": true,
-  "forin": false,
-  "immed": false,
-  "laxbreak": true,
-  "newcap": true,
-  "noarg": true,
-  "noempty": false,
-  "nonew": false,
-  "nomen": false,
-  "onevar": false,
-  "plusplus": false,
-  "regexp": false,
-  "undef": true,
-  "sub": true,
-  "strict": false,
-  "white": false,
-  "eqnull": true,
-  "esnext": true
-}
diff --git a/tests/dummy/app/app.js b/tests/dummy/app/app.js
index 8d66b95..831ad61 100644
--- a/tests/dummy/app/app.js
+++ b/tests/dummy/app/app.js
@@ -1,16 +1,16 @@
 import Ember from 'ember';
-import Resolver from 'ember/resolver';
-import loadInitializers from 'ember/load-initializers';
+import Resolver from './resolver';
+import loadInitializers from 'ember-load-initializers';
 import config from './config/environment';
 
-var App;
+let App;
 
 Ember.MODEL_FACTORY_INJECTIONS = true;
 
 App = Ember.Application.extend({
   modulePrefix: config.modulePrefix,
   podModulePrefix: config.podModulePrefix,
-  Resolver: Resolver
+  Resolver
 });
 
 loadInitializers(App, config.modulePrefix);
diff --git a/tests/dummy/app/index.html b/tests/dummy/app/index.html
index 1c49d36..5120bd7 100644
--- a/tests/dummy/app/index.html
+++ b/tests/dummy/app/index.html
@@ -7,19 +7,19 @@
     <meta name="description" content="">
     <meta name="viewport" content="width=device-width, initial-scale=1">
 
-    {{content-for 'head'}}
+    {{content-for "head"}}
 
-    <link rel="stylesheet" href="assets/vendor.css">
-    <link rel="stylesheet" href="assets/dummy.css">
+    <link rel="stylesheet" href="{{rootURL}}assets/vendor.css">
+    <link rel="stylesheet" href="{{rootURL}}assets/dummy.css">
 
-    {{content-for 'head-footer'}}
+    {{content-for "head-footer"}}
   </head>
   <body>
-    {{content-for 'body'}}
+    {{content-for "body"}}
 
-    <script src="assets/vendor.js"></script>
-    <script src="assets/dummy.js"></script>
+    <script src="{{rootURL}}assets/vendor.js"></script>
+    <script src="{{rootURL}}assets/dummy.js"></script>
 
-    {{content-for 'body-footer'}}
+    {{content-for "body-footer"}}
   </body>
 </html>
diff --git a/tests/dummy/app/resolver.js b/tests/dummy/app/resolver.js
new file mode 100644
index 0000000..2fb563d
--- /dev/null
+++ b/tests/dummy/app/resolver.js
@@ -0,0 +1,3 @@
+import Resolver from 'ember-resolver';
+
+export default Resolver;
diff --git a/tests/dummy/app/router.js b/tests/dummy/app/router.js
index 4ce0ec9..cdc2578 100644
--- a/tests/dummy/app/router.js
+++ b/tests/dummy/app/router.js
@@ -1,12 +1,12 @@
 import Ember from 'ember';
 import config from './config/environment';
 
-var Router = Ember.Router.extend({
-  location: config.locationType
+const Router = Ember.Router.extend({
+  location: config.locationType,
+  rootURL: config.rootURL
 });
 
 Router.map(function() {
-  this.route('test');
 });
 
 export default Router;
diff --git a/tests/dummy/config/environment.js b/tests/dummy/config/environment.js
index c59bcd5..2529939 100644
--- a/tests/dummy/config/environment.js
+++ b/tests/dummy/config/environment.js
@@ -4,7 +4,7 @@ module.exports = function(environment) {
   var ENV = {
     modulePrefix: 'dummy',
     environment: environment,
-    baseURL: '/',
+    rootURL: '/',
     locationType: 'auto',
     EmberENV: {
       FEATURES: {
@@ -29,7 +29,6 @@ module.exports = function(environment) {
 
   if (environment === 'test') {
     // Testem prefers this...
-    ENV.baseURL = '/';
     ENV.locationType = 'none';
 
     // keep test console output quieter
diff --git a/tests/helpers/destroy-app.js b/tests/helpers/destroy-app.js
new file mode 100644
index 0000000..c3d4d1a
--- /dev/null
+++ b/tests/helpers/destroy-app.js
@@ -0,0 +1,5 @@
+import Ember from 'ember';
+
+export default function destroyApp(application) {
+  Ember.run(application, 'destroy');
+}
diff --git a/tests/helpers/module-for-acceptance.js b/tests/helpers/module-for-acceptance.js
new file mode 100644
index 0000000..76996fd
--- /dev/null
+++ b/tests/helpers/module-for-acceptance.js
@@ -0,0 +1,23 @@
+import { module } from 'qunit';
+import Ember from 'ember';
+import startApp from '../helpers/start-app';
+import destroyApp from '../helpers/destroy-app';
+
+const { RSVP: { Promise } } = Ember;
+
+export default function(name, options = {}) {
+  module(name, {
+    beforeEach() {
+      this.application = startApp();
+
+      if (options.beforeEach) {
+        return options.beforeEach.apply(this, arguments);
+      }
+    },
+
+    afterEach() {
+      let afterEach = options.afterEach && options.afterEach.apply(this, arguments);
+      return Promise.resolve(afterEach).then(() => destroyApp(this.application));
+    }
+  });
+}
diff --git a/tests/helpers/resolver.js b/tests/helpers/resolver.js
index 28f4ece..b208d38 100644
--- a/tests/helpers/resolver.js
+++ b/tests/helpers/resolver.js
@@ -1,7 +1,7 @@
-import Resolver from 'ember/resolver';
+import Resolver from '../../resolver';
 import config from '../../config/environment';
 
-var resolver = Resolver.create();
+const resolver = Resolver.create();
 
 resolver.namespace = {
   modulePrefix: config.modulePrefix,
diff --git a/tests/helpers/start-app.js b/tests/helpers/start-app.js
index 9ce9f53..e098f1d 100644
--- a/tests/helpers/start-app.js
+++ b/tests/helpers/start-app.js
@@ -3,13 +3,12 @@ import Application from '../../app';
 import config from '../../config/environment';
 
 export default function startApp(attrs) {
-  var application;
-  var assign = Ember.assign || Ember.merge;
+  let application;
 
-  var attributes = assign({}, config.APP);
-  attributes = assign(attributes, attrs); // use defaults, but you can override;
+  let attributes = Ember.merge({}, config.APP);
+  attributes = Ember.merge(attributes, attrs); // use defaults, but you can override;
 
-  Ember.run(function() {
+  Ember.run(() => {
     application = Application.create(attributes);
     application.setupForTesting();
     application.injectTestHelpers();
diff --git a/tests/index.html b/tests/index.html
index 8fea6fe..f7ff652 100644
--- a/tests/index.html
+++ b/tests/index.html
@@ -7,27 +7,27 @@
     <meta name="description" content="">
     <meta name="viewport" content="width=device-width, initial-scale=1">
 
-    {{content-for 'head'}}
-    {{content-for 'test-head'}}
+    {{content-for "head"}}
+    {{content-for "test-head"}}
 
-    <link rel="stylesheet" href="assets/vendor.css">
-    <link rel="stylesheet" href="assets/dummy.css">
-    <link rel="stylesheet" href="assets/test-support.css">
+    <link rel="stylesheet" href="{{rootURL}}assets/vendor.css">
+    <link rel="stylesheet" href="{{rootURL}}assets/dummy.css">
+    <link rel="stylesheet" href="{{rootURL}}assets/test-support.css">
 
-    {{content-for 'head-footer'}}
-    {{content-for 'test-head-footer'}}
+    {{content-for "head-footer"}}
+    {{content-for "test-head-footer"}}
   </head>
   <body>
+    {{content-for "body"}}
+    {{content-for "test-body"}}
 
-    {{content-for 'body'}}
-    {{content-for 'test-body'}}
-    <script src="assets/vendor.js"></script>
-    <script src="assets/test-support.js"></script>
-    <script src="assets/dummy.js"></script>
-    <script src="testem.js"></script>
-    <script src="assets/test-loader.js"></script>
+    <script src="{{rootURL}}testem.js" integrity=""></script>
+    <script src="{{rootURL}}assets/vendor.js"></script>
+    <script src="{{rootURL}}assets/test-support.js"></script>
+    <script src="{{rootURL}}assets/dummy.js"></script>
+    <script src="{{rootURL}}assets/tests.js"></script>
 
-    {{content-for 'body-footer'}}
-    {{content-for 'test-body-footer'}}
+    {{content-for "body-footer"}}
+    {{content-for "test-body-footer"}}
   </body>
 </html>
diff --git a/tests/test-helper.js b/tests/test-helper.js
index 362294c..bbe42fa 100644
--- a/tests/test-helper.js
+++ b/tests/test-helper.js
@@ -1,6 +1,4 @@
 import resolver from './helpers/resolver';
-import {
-  setResolver
-} from 'ember-mocha';
+import { setResolver } from 'ember-mocha';
 
 setResolver(resolver);
diff --git a/tests/unit/components/ember-notify/message-test.js b/tests/unit/components/ember-notify/message-test.js
index d09b88d..c315b50 100644
--- a/tests/unit/components/ember-notify/message-test.js
+++ b/tests/unit/components/ember-notify/message-test.js
@@ -5,7 +5,6 @@ import {
   it
 } from 'ember-mocha';
 import {
-  messages,
   observeSequence,
   timesSince
 } from '../../../helpers';
@@ -130,4 +129,4 @@ describeComponent(
       }, 500);
     });
   }
-);
\ No newline at end of file
+);
diff --git a/tests/unit/helper-test.js b/tests/unit/helper-test.js
index aa61ced..0c59d51 100644
--- a/tests/unit/helper-test.js
+++ b/tests/unit/helper-test.js
@@ -1,11 +1,9 @@
-import Ember from 'ember';
 import {
   describeComponent,
   it
 } from 'ember-mocha';
 import {
-  messages,
-  observeSequence
+  messages
 } from '../helpers';
 import Notify from 'ember-notify';
 
@@ -36,7 +34,7 @@ describeComponent(
     });
 
     it('will queue pending messages if the component isn\'t rendered', function() {
-      var message = helper.info('Hello world');
+      helper.info('Hello world');
       expect($('.ember-notify').length).to.equal(0, 'component is not yet shown');
 
       var component = this.subject();
